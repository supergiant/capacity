// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// Config config
// swagger:model Config
type Config struct {

	// cluster name
	ClusterName string `json:"clusterName,omitempty"`

	// ignored node labels
	IgnoredNodeLabels map[string]string `json:"ignoredNodeLabels,omitempty"`

	// kube API host
	KubeAPIHost string `json:"kubeAPIHost,omitempty"`

	// kube API password
	KubeAPIPassword string `json:"kubeAPIPassword,omitempty"`

	// kube API port
	KubeAPIPort string `json:"kubeAPIPort,omitempty"`

	// kube API user
	KubeAPIUser string `json:"kubeAPIUser,omitempty"`

	// machine types
	MachineTypes []string `json:"machineTypes"`

	// master private addr
	MasterPrivateAddr string `json:"masterPrivateAddr,omitempty"`

	// max machine provision time
	MaxMachineProvisionTime string `json:"maxMachineProvisionTime,omitempty"`

	// new node time buffer
	NewNodeTimeBuffer int64 `json:"newNodeTimeBuffer,omitempty"`

	// pause lock
	PauseLock bool `json:"pauseLock,omitempty"`

	// paused
	Paused bool `json:"paused,omitempty"`

	// provider
	Provider map[string]string `json:"provider,omitempty"`

	// provider name
	ProviderName string `json:"providerName,omitempty"`

	// SSH pub key
	SSHPubKey string `json:"sshPubKey,omitempty"`

	// scan interval
	ScanInterval string `json:"scanInterval,omitempty"`

	// workers count max
	WorkersCountMax int64 `json:"workersCountMax,omitempty"`

	// workers count min
	WorkersCountMin int64 `json:"workersCountMin,omitempty"`
}

// Validate validates this config
func (m *Config) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Config) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Config) UnmarshalBinary(b []byte) error {
	var res Config
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
