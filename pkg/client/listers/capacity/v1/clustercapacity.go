// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/supergiant/capacity/pkg/apis/capacity/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ClusterCapacityLister helps list ClusterCapacities.
type ClusterCapacityLister interface {
	// List lists all ClusterCapacities in the indexer.
	List(selector labels.Selector) (ret []*v1.ClusterCapacity, err error)
	// ClusterCapacities returns an object that can list and get ClusterCapacities.
	ClusterCapacities(namespace string) ClusterCapacityNamespaceLister
	ClusterCapacityListerExpansion
}

// clusterCapacityLister implements the ClusterCapacityLister interface.
type clusterCapacityLister struct {
	indexer cache.Indexer
}

// NewClusterCapacityLister returns a new ClusterCapacityLister.
func NewClusterCapacityLister(indexer cache.Indexer) ClusterCapacityLister {
	return &clusterCapacityLister{indexer: indexer}
}

// List lists all ClusterCapacities in the indexer.
func (s *clusterCapacityLister) List(selector labels.Selector) (ret []*v1.ClusterCapacity, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ClusterCapacity))
	})
	return ret, err
}

// ClusterCapacities returns an object that can list and get ClusterCapacities.
func (s *clusterCapacityLister) ClusterCapacities(namespace string) ClusterCapacityNamespaceLister {
	return clusterCapacityNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ClusterCapacityNamespaceLister helps list and get ClusterCapacities.
type ClusterCapacityNamespaceLister interface {
	// List lists all ClusterCapacities in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.ClusterCapacity, err error)
	// Get retrieves the ClusterCapacity from the indexer for a given namespace and name.
	Get(name string) (*v1.ClusterCapacity, error)
	ClusterCapacityNamespaceListerExpansion
}

// clusterCapacityNamespaceLister implements the ClusterCapacityNamespaceLister
// interface.
type clusterCapacityNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ClusterCapacities in the indexer for a given namespace.
func (s clusterCapacityNamespaceLister) List(selector labels.Selector) (ret []*v1.ClusterCapacity, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ClusterCapacity))
	})
	return ret, err
}

// Get retrieves the ClusterCapacity from the indexer for a given namespace and name.
func (s clusterCapacityNamespaceLister) Get(name string) (*v1.ClusterCapacity, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("clustercapacity"), name)
	}
	return obj.(*v1.ClusterCapacity), nil
}
