{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "the purpose of this application is to manage a cloud infrastructure\nin cost-effective way.",
    "title": "Capacity service API.",
    "termsOfService": "there are no TOS at this moment, use at your own risk we take no responsibility",
    "version": "0.0.0"
  },
  "host": "localhost:8081",
  "basePath": "/",
  "paths": {
    "/api/v1/config": {
      "get": {
        "description": "This will show all configuration parameters of the application.",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "https",
          "http"
        ],
        "tags": [
          "config"
        ],
        "summary": "Returns a current view of the kubescaler configuration.",
        "operationId": "getConfig",
        "responses": {
          "200": {
            "$ref": "#/responses/configResponse"
          }
        }
      },
      "patch": {
        "description": "This will update current configuration of the application.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "https",
          "http"
        ],
        "tags": [
          "config"
        ],
        "summary": "Returns a new view of the kubescaler configuration.",
        "operationId": "updateConfig",
        "responses": {
          "200": {
            "$ref": "#/responses/configResponse"
          }
        }
      }
    },
    "/api/v1/machinetypes": {
      "get": {
        "description": "This will show all provider's machine types.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "workers"
        ],
        "summary": "Lists all provider's machine types.",
        "operationId": "listMachineTypes",
        "responses": {
          "200": {
            "$ref": "#/responses/machineTypesListResponse"
          }
        }
      }
    },
    "/api/v1/workers": {
      "get": {
        "description": "This will show all workers.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "workers"
        ],
        "summary": "Lists all workers.",
        "operationId": "listWorkers",
        "responses": {
          "200": {
            "$ref": "#/responses/workerListResponse"
          }
        }
      },
      "post": {
        "description": "This will create a new worker.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "https",
          "http"
        ],
        "tags": [
          "workers"
        ],
        "summary": "Create a new worker with the specified machine type.",
        "operationId": "createWorker",
        "responses": {
          "201": {
            "$ref": "#/responses/workerResponse"
          }
        }
      }
    },
    "/api/v1/workers/{machineID}": {
      "get": {
        "description": "This will get a worker.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "workers"
        ],
        "summary": "Get a worker with the specified machineID.",
        "operationId": "getWorker",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MachineID",
            "name": "machineID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/workerResponse"
          }
        }
      },
      "delete": {
        "description": "This will delete a worker.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "workers"
        ],
        "summary": "Delete a worker with the specified machineID.",
        "operationId": "deleteWorker",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MachineID",
            "name": "machineID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/workerResponse"
          }
        }
      },
      "patch": {
        "description": "This will update a worker.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "workers"
        ],
        "summary": "Update a worker.",
        "operationId": "updateWorker",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MachineID",
            "name": "machineID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/workerResponse"
          }
        }
      }
    },
    "/version": {
      "get": {
        "description": "This will show version information.",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "https",
          "http"
        ],
        "tags": [
          "version"
        ],
        "summary": "Returns version information.",
        "operationId": "getVersion",
        "responses": {
          "200": {
            "$ref": "#/responses/versionResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "Config": {
      "type": "object",
      "properties": {
        "clusterName": {
          "type": "string",
          "x-go-name": "ClusterName"
        },
        "ignoredNodeLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "IgnoredNodeLabels"
        },
        "kubeAPIHost": {
          "type": "string",
          "x-go-name": "KubeAPIHost"
        },
        "kubeAPIPassword": {
          "type": "string",
          "x-go-name": "KubeAPIPassword"
        },
        "kubeAPIPort": {
          "type": "string",
          "x-go-name": "KubeAPIPort"
        },
        "kubeAPIUser": {
          "type": "string",
          "x-go-name": "KubeAPIUser"
        },
        "machineTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "MachineTypes"
        },
        "masterPrivateAddr": {
          "type": "string",
          "x-go-name": "MasterPrivateAddr"
        },
        "maxMachineProvisionTime": {
          "type": "string",
          "x-go-name": "MaxMachineProvisionTime"
        },
        "newNodeTimeBuffer": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "NewNodeTimeBuffer"
        },
        "pauseLock": {
          "type": "boolean",
          "x-go-name": "PauseLock"
        },
        "paused": {
          "type": "boolean",
          "x-go-name": "Paused"
        },
        "provider": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Provider"
        },
        "providerName": {
          "type": "string",
          "x-go-name": "ProviderName"
        },
        "scanInterval": {
          "type": "string",
          "x-go-name": "ScanInterval"
        },
        "sshPubKey": {
          "type": "string",
          "x-go-name": "SSHPubKey"
        },
        "workersCountMax": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "WorkersCountMax"
        },
        "workersCountMin": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "WorkersCountMin"
        }
      },
      "x-go-package": "github.com/supergiant/capacity/pkg/kubescaler"
    },
    "Info": {
      "type": "object",
      "title": "Info contains versioning information.",
      "properties": {
        "buildDate": {
          "type": "string",
          "x-go-name": "BuildDate"
        },
        "compiler": {
          "type": "string",
          "x-go-name": "Compiler"
        },
        "gitCommit": {
          "type": "string",
          "x-go-name": "GitCommit"
        },
        "gitVersion": {
          "type": "string",
          "x-go-name": "GitVersion"
        },
        "goVersion": {
          "type": "string",
          "x-go-name": "GoVersion"
        },
        "platform": {
          "type": "string",
          "x-go-name": "Platform"
        }
      },
      "x-go-package": "github.com/supergiant/capacity/pkg/version"
    },
    "MachineType": {
      "description": "TODO: split string and resource representation",
      "type": "object",
      "properties": {
        "cpu": {
          "type": "string",
          "x-go-name": "CPU"
        },
        "memory": {
          "type": "string",
          "x-go-name": "Memory"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "github.com/supergiant/capacity/pkg/provider"
    },
    "Worker": {
      "description": "It contains data from a (virtual) machine and a kubernetes node running on it.",
      "type": "object",
      "title": "Worker is an abstraction used by kubescaler to manage cluster capacity.",
      "required": [
        "machineID"
      ],
      "properties": {
        "clusterName": {
          "description": "ClusterName is a kubernetes cluster name.",
          "type": "string",
          "x-go-name": "ClusterName"
        },
        "creationTimestamp": {
          "description": "CreationTimestamp is a timestamp representing a time when this machine was created.",
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreationTimestamp"
        },
        "machineID": {
          "description": "MachineID is a unique id of the provider's virtual machine.",
          "type": "string",
          "x-go-name": "MachineID"
        },
        "machineName": {
          "description": "MachineName is a human-readable name of virtual machine.",
          "type": "string",
          "x-go-name": "MachineName"
        },
        "machineState": {
          "description": "MachineState represent a virtual machine state.",
          "type": "string",
          "x-go-name": "MachineState"
        },
        "machineType": {
          "description": "MachineType is type of virtual machine (eg. 't2.micro' for AWS).",
          "type": "string",
          "x-go-name": "MachineType"
        },
        "nodeLabels": {
          "description": "NodeLabels represents a labels of the kubernetes node that runs on top of that machine.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "NodeLabels"
        },
        "nodeName": {
          "description": "NodeName represents a name of the kubernetes node that runs on top of that machine.",
          "type": "string",
          "x-go-name": "NodeName"
        },
        "reserved": {
          "description": "Reserved is a parameter that is used to prevent downscaling of the worker.",
          "type": "boolean",
          "x-go-name": "Reserved"
        }
      },
      "x-go-package": "github.com/supergiant/capacity/pkg/kubescaler/workers"
    },
    "WorkerList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Worker"
          },
          "x-go-name": "Items"
        }
      },
      "x-go-package": "github.com/supergiant/capacity/pkg/kubescaler/workers"
    }
  },
  "responses": {
    "configResponse": {
      "description": "configResponse contains an application config parameters.",
      "schema": {
        "$ref": "#/definitions/Config"
      }
    },
    "machineTypesListResponse": {
      "description": "machineTypesListResponse contains a list of workers.",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/MachineType"
        }
      }
    },
    "versionResponse": {
      "description": "versionResponse contains an application config parameters.",
      "schema": {
        "$ref": "#/definitions/Info"
      }
    },
    "workerListResponse": {
      "description": "workerListResponse contains a list of workers.",
      "schema": {
        "$ref": "#/definitions/WorkerList"
      }
    },
    "workerResponse": {
      "description": "workerResponse contains a worker representation.",
      "schema": {
        "$ref": "#/definitions/Worker"
      }
    }
  }
}