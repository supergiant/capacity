{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "the purpose of this application is to manage a cloud infrastructure\nin cost-effective way.",
    "title": "Capacity service API.",
    "termsOfService": "there are no TOS at this moment, use at your own risk we take no responsibility",
    "version": "0.0.0"
  },
  "host": "localhost:8081",
  "basePath": "/",
  "paths": {
    "/api/v1/config": {
      "get": {
        "description": "This will show all configuration parameters of the application.",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "https",
          "http"
        ],
        "tags": [
          "config"
        ],
        "summary": "Returns a current view of the kubescaler configuration.",
        "operationId": "getConfig",
        "responses": {
          "200": {
            "$ref": "#/responses/configResponse"
          }
        }
      },
      "patch": {
        "description": "This will update current configuration of the application.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "https",
          "http"
        ],
        "tags": [
          "config"
        ],
        "summary": "Returns a new view of the kubescaler configuration.",
        "operationId": "updateConfig",
        "responses": {
          "200": {
            "$ref": "#/responses/configResponse"
          },
          "400": {}
        }
      }
    },
    "/api/v1/machinetypes": {
      "get": {
        "description": "This will show all provider's machine types.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "workers"
        ],
        "summary": "Lists all provider's machine types.",
        "operationId": "listMachineTypes",
        "responses": {
          "200": {
            "$ref": "#/responses/machineTypesListResponse"
          }
        }
      }
    },
    "/api/v1/workers": {
      "get": {
        "description": "This will show all workers.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "workers"
        ],
        "summary": "Lists all workers.",
        "operationId": "listWorkers",
        "responses": {
          "200": {
            "$ref": "#/responses/workerListResponse"
          }
        }
      },
      "post": {
        "description": "This will create a new worker.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "https",
          "http"
        ],
        "tags": [
          "workers"
        ],
        "summary": "Create a new worker with the specified machine type.",
        "operationId": "createWorker",
        "responses": {
          "201": {
            "$ref": "#/responses/workerResponse"
          },
          "400": {}
        }
      }
    },
    "/api/v1/workers/{machineID}": {
      "delete": {
        "description": "This will delete a worker.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "workers"
        ],
        "summary": "Delete a worker with the specified machineID.",
        "operationId": "deleteWorker",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MachineID",
            "name": "machineID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/workerResponse"
          },
          "400": {}
        }
      }
    },
    "/version": {
      "get": {
        "description": "This will show version information.",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "https",
          "http"
        ],
        "tags": [
          "version"
        ],
        "summary": "Returns version information.",
        "operationId": "getVersion",
        "responses": {
          "200": {
            "$ref": "#/responses/versionResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "Config": {
      "type": "object",
      "properties": {
        "clusterName": {
          "type": "string",
          "x-go-name": "ClusterName"
        },
        "kubeAPIPassword": {
          "type": "string",
          "x-go-name": "KubeAPIPassword"
        },
        "kubeAPIPort": {
          "type": "string",
          "x-go-name": "KubeAPIPort"
        },
        "machineTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "MachineTypes"
        },
        "masterPrivateAddr": {
          "type": "string",
          "x-go-name": "MasterPrivateAddr"
        },
        "maxMachineProvisionTime": {
          "$ref": "#/definitions/Duration"
        },
        "nodesCountMax": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "NodesCountMax"
        },
        "nodesCountMin": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "NodesCountMin"
        },
        "provider": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Provider"
        },
        "providerName": {
          "type": "string",
          "x-go-name": "ProviderName"
        },
        "sshPubKey": {
          "type": "string",
          "x-go-name": "SSHPubKey"
        },
        "stopped": {
          "type": "boolean",
          "x-go-name": "Stopped"
        }
      },
      "x-go-package": "github.com/supergiant/capacity/pkg/kubescaler"
    },
    "Duration": {
      "description": "A Duration represents the elapsed time between two instants\nas an int64 nanosecond count. The representation limits the\nlargest representable duration to approximately 290 years.",
      "type": "integer",
      "format": "int64",
      "x-go-package": "time"
    },
    "Info": {
      "type": "object",
      "title": "Info contains versioning information.",
      "properties": {
        "buildDate": {
          "type": "string",
          "x-go-name": "BuildDate"
        },
        "compiler": {
          "type": "string",
          "x-go-name": "Compiler"
        },
        "gitCommit": {
          "type": "string",
          "x-go-name": "GitCommit"
        },
        "gitVersion": {
          "type": "string",
          "x-go-name": "GitVersion"
        },
        "goVersion": {
          "type": "string",
          "x-go-name": "GoVersion"
        },
        "platform": {
          "type": "string",
          "x-go-name": "Platform"
        }
      },
      "x-go-package": "github.com/supergiant/capacity/pkg/version"
    },
    "MachineType": {
      "type": "object",
      "properties": {
        "cpu": {
          "$ref": "#/definitions/Quantity"
        },
        "memory": {
          "$ref": "#/definitions/Quantity"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "github.com/supergiant/capacity/pkg/provider"
    },
    "Quantity": {
      "description": "The serialization format is:\n\n\u003cquantity\u003e        ::= \u003csignedNumber\u003e\u003csuffix\u003e\n(Note that \u003csuffix\u003e may be empty, from the \"\" case in \u003cdecimalSI\u003e.)\n\u003cdigit\u003e           ::= 0 | 1 | ... | 9\n\u003cdigits\u003e          ::= \u003cdigit\u003e | \u003cdigit\u003e\u003cdigits\u003e\n\u003cnumber\u003e          ::= \u003cdigits\u003e | \u003cdigits\u003e.\u003cdigits\u003e | \u003cdigits\u003e. | .\u003cdigits\u003e\n\u003csign\u003e            ::= \"+\" | \"-\"\n\u003csignedNumber\u003e    ::= \u003cnumber\u003e | \u003csign\u003e\u003cnumber\u003e\n\u003csuffix\u003e          ::= \u003cbinarySI\u003e | \u003cdecimalExponent\u003e | \u003cdecimalSI\u003e\n\u003cbinarySI\u003e        ::= Ki | Mi | Gi | Ti | Pi | Ei\n(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\u003cdecimalSI\u003e       ::= m | \"\" | k | M | G | T | P | E\n(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n\u003cdecimalExponent\u003e ::= \"e\" \u003csignedNumber\u003e | \"E\" \u003csignedNumber\u003e\n\nNo matter which of the three exponent forms is used, no quantity may represent\na number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal\nplaces. Numbers larger or more precise will be capped or rounded up.\n(E.g.: 0.1m will rounded up to 1m.)\nThis may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix\nit had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\".\nThis means that Exponent/suffix will be adjusted up or down (with a\ncorresponding increase or decrease in Mantissa) such that:\na. No precision is lost\nb. No fractional digits will be emitted\nc. The exponent (or suffix) is as large as possible.\nThe sign will be omitted unless the number is negative.\n\nExamples:\n1.5 will be serialized as \"1500m\"\n1.5Gi will be serialized as \"1536Mi\"\n\nNOTE: We reserve the right to amend this canonical format, perhaps to\nallow 1.5 to be canonical.\nTODO: Remove above disclaimer after all bikeshedding about format is over,\nor after March 2015.\n\nNote that the quantity will NEVER be internally represented by a\nfloating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed,\nbut will be re-emitted in their canonical form. (So always use canonical\nform, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without\nwriting some sort of special handling code in the hopes that that will\ncause implementors to also use a fixed point implementation.\n\n+protobuf=true\n+protobuf.embed=string\n+protobuf.options.marshal=false\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:deepcopy-gen=true\n+k8s:openapi-gen=true",
      "type": "object",
      "title": "Quantity is a fixed-point representation of a number.\nIt provides convenient marshaling/unmarshaling in JSON and YAML,\nin addition to String() and Int64() accessors.",
      "x-go-package": "github.com/supergiant/capacity/vendor/k8s.io/apimachinery/pkg/api/resource"
    },
    "Worker": {
      "type": "object",
      "required": [
        "machineID"
      ],
      "properties": {
        "clusterName": {
          "description": "ClusterName is a kubernetes cluster name.",
          "type": "string",
          "x-go-name": "ClusterName"
        },
        "creationTimestamp": {
          "description": "CreationTimestamp is a timestamp representing the server time when this object was created.",
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreationTimestamp"
        },
        "machineID": {
          "description": "MachineID is a unique id of the provider's virtual machine.",
          "type": "string",
          "x-go-name": "MachineID"
        },
        "machineName": {
          "description": "MachineName is a human-readable name of virtual machine.",
          "type": "string",
          "x-go-name": "MachineName"
        },
        "machineState": {
          "description": "MachineState represent a virtual machine state.",
          "type": "string",
          "x-go-name": "MachineState"
        },
        "machineType": {
          "description": "MachineType is type of virtual machine (eg. 't2.micro' for AWS).",
          "type": "string",
          "x-go-name": "MachineType"
        },
        "nodeName": {
          "description": "NodeName represents a name of the kubernetes node that runs on top of that machine.",
          "type": "string",
          "x-go-name": "NodeName"
        },
        "reserved": {
          "description": "Reserved is a parameter that is used to prevent downscaling of the worker.",
          "type": "boolean",
          "x-go-name": "Reserved"
        }
      },
      "x-go-package": "github.com/supergiant/capacity/pkg/kubescaler/workers"
    },
    "WorkerList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Worker"
          },
          "x-go-name": "Items"
        }
      },
      "x-go-package": "github.com/supergiant/capacity/pkg/kubescaler/workers"
    }
  },
  "responses": {
    "configResponse": {
      "description": "configResponse contains an application config parameters.",
      "schema": {
        "$ref": "#/definitions/Config"
      }
    },
    "machineTypesListResponse": {
      "description": "machineTypesListResponse contains a list of workers.",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/MachineType"
        }
      }
    },
    "versionResponse": {
      "description": "versionResponse contains an application config parameters.",
      "schema": {
        "$ref": "#/definitions/Info"
      }
    },
    "workerListResponse": {
      "description": "workerListResponse contains a list of workers.",
      "schema": {
        "$ref": "#/definitions/WorkerList"
      }
    },
    "workerResponse": {
      "description": "workerResponse contains a worker representation.",
      "schema": {
        "$ref": "#/definitions/Worker"
      }
    }
  }
}